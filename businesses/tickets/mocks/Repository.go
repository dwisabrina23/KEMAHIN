// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	tickets "kemahin/businesses/tickets"

	mock "github.com/stretchr/testify/mock"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// Create provides a mock function with given fields: ticketData
func (_m *Repository) Create(ticketData *tickets.Domain) (tickets.Domain, error) {
	ret := _m.Called(ticketData)

	var r0 tickets.Domain
	if rf, ok := ret.Get(0).(func(*tickets.Domain) tickets.Domain); ok {
		r0 = rf(ticketData)
	} else {
		r0 = ret.Get(0).(tickets.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*tickets.Domain) error); ok {
		r1 = rf(ticketData)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetByID provides a mock function with given fields: id
func (_m *Repository) GetByID(id int) (tickets.Domain, error) {
	ret := _m.Called(id)

	var r0 tickets.Domain
	if rf, ok := ret.Get(0).(func(int) tickets.Domain); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(tickets.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetByUserId provides a mock function with given fields: idUser
func (_m *Repository) GetByUserId(idUser int) ([]tickets.Domain, error) {
	ret := _m.Called(idUser)

	var r0 []tickets.Domain
	if rf, ok := ret.Get(0).(func(int) []tickets.Domain); ok {
		r0 = rf(idUser)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]tickets.Domain)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(idUser)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
